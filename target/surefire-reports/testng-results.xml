<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="1" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="31136" started-at="2020-12-11T07:14:13Z" finished-at="2020-12-11T07:14:44Z">
    <groups>
    </groups>
    <test name="Mobile Automation Test" duration-ms="31136" started-at="2020-12-11T07:14:13Z" finished-at="2020-12-11T07:14:44Z">
      <class name="com.TestCases.LoginTest">
        <test-method status="PASS" signature="startAppiumServer()[pri:0, instance:com.TestCases.LoginTest@6f195bc3]" name="startAppiumServer" is-config="true" duration-ms="4737" started-at="2020-12-11T12:44:08Z" finished-at="2020-12-11T12:44:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startAppiumServer -->
        <test-method status="PASS" signature="DriverInitializataion(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.TestCases.LoginTest@6f195bc3]" name="DriverInitializataion" is-config="true" duration-ms="15234" started-at="2020-12-11T12:44:13Z" finished-at="2020-12-11T12:44:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[emulator-5554]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Pixel_2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DriverInitializataion -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.TestCases.LoginTest@6f195bc3]" name="beforeClass" is-config="true" duration-ms="4661" started-at="2020-12-11T12:44:28Z" finished-at="2020-12-11T12:44:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="startVideoRecording()[pri:0, instance:com.TestCases.LoginTest@6f195bc3]" name="startVideoRecording" is-config="true" duration-ms="1198" started-at="2020-12-11T12:44:33Z" finished-at="2020-12-11T12:44:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startVideoRecording -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.TestCases.LoginTest@6f195bc3]" name="beforeMethod" is-config="true" duration-ms="586" started-at="2020-12-11T12:44:34Z" finished-at="2020-12-11T12:44:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="InvalidUsernameTest()[pri:1, instance:com.TestCases.LoginTest@6f195bc3]" name="InvalidUsernameTest" duration-ms="6948" started-at="2020-12-11T12:44:34Z" finished-at="2020-12-11T12:44:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvalidUsernameTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.TestCases.LoginTest@6f195bc3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-12-11T12:44:41Z" finished-at="2020-12-11T12:44:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="stopVideoRecording(org.testng.ITestResult)[pri:0, instance:com.TestCases.LoginTest@6f195bc3]" name="stopVideoRecording" is-config="true" duration-ms="1048" started-at="2020-12-11T12:44:41Z" finished-at="2020-12-11T12:44:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=InvalidUsernameTest status=SUCCESS method=LoginTest.InvalidUsernameTest()[pri:1, instance:com.TestCases.LoginTest@6f195bc3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopVideoRecording -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.TestCases.LoginTest@6f195bc3]" name="afterClass" is-config="true" duration-ms="1" started-at="2020-12-11T12:44:42Z" finished-at="2020-12-11T12:44:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.TestCases.LoginTest@6f195bc3]" name="afterTest" is-config="true" duration-ms="1425" started-at="2020-12-11T12:44:42Z" finished-at="2020-12-11T12:44:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="stopAppiumServer()[pri:0, instance:com.TestCases.LoginTest@6f195bc3]" name="stopAppiumServer" is-config="true" duration-ms="124" started-at="2020-12-11T12:44:46Z" finished-at="2020-12-11T12:44:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopAppiumServer -->
      </class> <!-- com.TestCases.LoginTest -->
    </test> <!-- Mobile Automation Test -->
  </suite> <!-- Suite -->
</testng-results>
