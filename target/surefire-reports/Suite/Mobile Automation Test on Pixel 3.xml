<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="VICKY" name="Mobile Automation Test on Pixel 3" tests="10" failures="0" timestamp="30 Dec 2020 04:53:00 GMT" time="111.971" errors="0">
  <testcase name="@BeforeClass jsonDataInitialaization" time="0.0" classname="com.TestCases.ProductCheckOutTest">
    <failure type="org.openqa.selenium.WebDriverException" message="org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to remote server. Original error: Error: socket hang up
Build info: version: &amp;apos;3.14.0&amp;apos;, revision: &amp;apos;aacccce0&amp;apos;, time: &amp;apos;2018-08-02T20:19:58.91Z&amp;apos;
System info: host: &amp;apos;VICKY&amp;apos;, ip: &amp;apos;10.0.75.1&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;1.8.0_231&amp;apos;
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.swaglabsmobileapp.MainA..., appPackage: com.swaglabsmobileapp, avdLaunchTimeout: 120000, databaseEnabled: false, desired: {appActivity: com.swaglabsmobileapp.MainA..., appPackage: com.swaglabsmobileapp, avdLaunchTimeout: 120000, deviceName: Pixel_2, platformName: android, platformVersion: 9.0}, deviceApiLevel: 28, deviceManufacturer: Google, deviceModel: AOSP on IA Emulator, deviceName: emulator-5554, deviceScreenDensity: 420, deviceScreenSize: 1080x1920, deviceUDID: emulator-5554, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, pixelRatio: 2.625, platform: LINUX, platformName: Android, platformVersion: 9, statBarHeight: 63, takesScreenshot: true, viewportRect: {height: 1731, left: 0, top: 63, width: 1080}, warnings: {}, webStorageEnabled: false}
Session ID: f6ab2a3d-c17e-46ab-b0af-c0fcfdb80aaf
*** Element info: {Using=accessibility id, value=test-Username}">
      <![CDATA[org.openqa.selenium.WebDriverException: org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to remote server. Original error: Error: socket hang up
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'VICKY', ip: '10.0.75.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_231'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.swaglabsmobileapp.MainA..., appPackage: com.swaglabsmobileapp, avdLaunchTimeout: 120000, databaseEnabled: false, desired: {appActivity: com.swaglabsmobileapp.MainA..., appPackage: com.swaglabsmobileapp, avdLaunchTimeout: 120000, deviceName: Pixel_2, platformName: android, platformVersion: 9.0}, deviceApiLevel: 28, deviceManufacturer: Google, deviceModel: AOSP on IA Emulator, deviceName: emulator-5554, deviceScreenDensity: 420, deviceScreenSize: 1080x1920, deviceUDID: emulator-5554, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, pixelRatio: 2.625, platform: LINUX, platformName: Android, platformVersion: 9, statBarHeight: 63, takesScreenshot: true, viewportRect: {height: 1731, left: 0, top: 63, width: 1080}, warnings: {}, webStorageEnabled: false}
Session ID: f6ab2a3d-c17e-46ab-b0af-c0fcfdb80aaf
*** Element info: {Using=accessibility id, value=test-Username}
	at io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction.apply(AppiumElementLocator.java:192)
	at io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction.apply(AppiumElementLocator.java:1)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:260)
	at io.appium.java_client.pagefactory.AppiumElementLocator.waitFor(AppiumElementLocator.java:99)
	at io.appium.java_client.pagefactory.AppiumElementLocator.findElement(AppiumElementLocator.java:119)
	at io.appium.java_client.pagefactory.interceptors.InterceptorOfASingleElement.intercept(InterceptorOfASingleElement.java:59)
	at io.appium.java_client.android.AndroidElement$$EnhancerByCGLIB$$c0b591f0.clear(<generated>)
	at com.BaseClass.TestBase.clear(TestBase.java:240)
	at com.Pages.LoginPage.enterUsername(LoginPage.java:22)
	at com.Pages.LoginPage.userLogin(LoginPage.java:44)
	at com.TestCases.ProductCheckOutTest.jsonDataInitialaization(ProductCheckOutTest.java:59)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to remote server. Original error: Error: socket hang up
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'VICKY', ip: '10.0.75.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_231'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.swaglabsmobileapp.MainA..., appPackage: com.swaglabsmobileapp, avdLaunchTimeout: 120000, databaseEnabled: false, desired: {appActivity: com.swaglabsmobileapp.MainA..., appPackage: com.swaglabsmobileapp, avdLaunchTimeout: 120000, deviceName: Pixel_2, platformName: android, platformVersion: 9.0}, deviceApiLevel: 28, deviceManufacturer: Google, deviceModel: AOSP on IA Emulator, deviceName: emulator-5554, deviceScreenDensity: 420, deviceScreenSize: 1080x1920, deviceUDID: emulator-5554, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, pixelRatio: 2.625, platform: LINUX, platformName: Android, platformVersion: 9, statBarHeight: 63, takesScreenshot: true, viewportRect: {height: 1731, left: 0, top: 63, width: 1080}, warnings: {}, webStorageEnabled: false}
Session ID: f6ab2a3d-c17e-46ab-b0af-c0fcfdb80aaf
*** Element info: {Using=accessibility id, value=test-Username}
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:239)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:41)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:322)
	at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:61)
	at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
	at io.appium.java_client.FindsByAccessibilityId.findElementByAccessibilityId(FindsByAccessibilityId.java:37)
	at io.appium.java_client.MobileBy$ByAccessibilityId.findElement(MobileBy.java:274)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:314)
	at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:57)
	at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
	at io.appium.java_client.pagefactory.bys.builder.ByChained.lambda$0(ByChained.java:38)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:260)
	at io.appium.java_client.pagefactory.bys.builder.ByChained.findElement(ByChained.java:72)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:314)
	at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:57)
	at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
	at io.appium.java_client.pagefactory.bys.ContentMappedBy.findElement(ContentMappedBy.java:50)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:314)
	at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:57)
	at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
	at io.appium.java_client.pagefactory.AppiumElementLocator.lambda$0(AppiumElementLocator.java:120)
	at io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction.apply(AppiumElementLocator.java:172)
	... 30 more
... Removed 20 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass jsonDataInitialaization -->
  <testcase name="@BeforeMethod startVideoRecording" time="0.0" classname="com.TestCases.ProductCheckOutTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod startVideoRecording -->
  <testcase name="@AfterMethod stopVideoRecording" time="0.0" classname="com.TestCases.ProductCheckOutTest">
    <skipped/>
  </testcase> <!-- @AfterMethod stopVideoRecording -->
  <testcase name="@BeforeClass beforeClass" time="0.0" classname="com.TestCases.ProductInformationTest">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase name="@BeforeMethod startVideoRecording" time="0.0" classname="com.TestCases.ProductInformationTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod startVideoRecording -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="com.TestCases.ProductInformationTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="com.TestCases.ProductInformationTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@AfterMethod stopVideoRecording" time="0.0" classname="com.TestCases.ProductInformationTest">
    <skipped/>
  </testcase> <!-- @AfterMethod stopVideoRecording -->
  <testcase name="@BeforeMethod startVideoRecording" time="0.0" classname="com.TestCases.LoginTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod startVideoRecording -->
  <testcase name="@BeforeMethod Initialaization" time="0.0" classname="com.TestCases.LoginTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod Initialaization -->
  <testcase name="@AfterMethod stopVideoRecording" time="0.0" classname="com.TestCases.LoginTest">
    <skipped/>
  </testcase> <!-- @AfterMethod stopVideoRecording -->
  <testcase name="@BeforeMethod startVideoRecording" time="0.0" classname="com.TestCases.ProductInformationTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod startVideoRecording -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="com.TestCases.ProductInformationTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="com.TestCases.ProductInformationTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@AfterMethod stopVideoRecording" time="0.0" classname="com.TestCases.ProductInformationTest">
    <skipped/>
  </testcase> <!-- @AfterMethod stopVideoRecording -->
  <testcase name="@BeforeMethod startVideoRecording" time="0.0" classname="com.TestCases.LoginTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod startVideoRecording -->
  <testcase name="@BeforeMethod Initialaization" time="0.0" classname="com.TestCases.LoginTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod Initialaization -->
  <testcase name="@AfterMethod stopVideoRecording" time="0.0" classname="com.TestCases.LoginTest">
    <skipped/>
  </testcase> <!-- @AfterMethod stopVideoRecording -->
  <testcase name="@AfterClass logOutAndTearDown" time="0.0" classname="com.TestCases.ProductCheckOutTest">
    <skipped/>
  </testcase> <!-- @AfterClass logOutAndTearDown -->
  <testcase name="@AfterTest afterTest" time="0.0" classname="com.TestCases.LoginTest">
    <skipped/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase name="invalidUsernameTest" time="23.165" classname="com.TestCases.LoginTest"/>
  <testcase name="validateAddToCart" time="0.012" classname="com.TestCases.ProductCheckOutTest">
    <skipped/>
  </testcase> <!-- validateAddToCart -->
  <testcase name="validateProductsOnProductPage" time="0.0" classname="com.TestCases.ProductInformationTest">
    <skipped/>
  </testcase> <!-- validateProductsOnProductPage -->
  <testcase name="invalidPasswordTest" time="0.0" classname="com.TestCases.LoginTest">
    <skipped/>
  </testcase> <!-- invalidPasswordTest -->
  <testcase name="validateProductsOnProductDetailsPage" time="0.001" classname="com.TestCases.ProductInformationTest">
    <skipped/>
  </testcase> <!-- validateProductsOnProductDetailsPage -->
  <testcase name="validUsernameTest" time="0.0" classname="com.TestCases.LoginTest">
    <skipped/>
  </testcase> <!-- validUsernameTest -->
  <testcase name="validateProductOnCartPage" time="0.0" classname="com.TestCases.ProductCheckOutTest">
    <skipped/>
  </testcase> <!-- validateProductOnCartPage -->
  <testcase name="validateProductOnInformationPage" time="0.0" classname="com.TestCases.ProductCheckOutTest">
    <skipped/>
  </testcase> <!-- validateProductOnInformationPage -->
  <testcase name="validateProductOnOverviewPage" time="0.0" classname="com.TestCases.ProductCheckOutTest">
    <skipped/>
  </testcase> <!-- validateProductOnOverviewPage -->
  <testcase name="validateProductOrderSucess" time="0.0" classname="com.TestCases.ProductCheckOutTest">
    <skipped/>
  </testcase> <!-- validateProductOrderSucess -->
</testsuite> <!-- Mobile Automation Test on Pixel 3 -->
