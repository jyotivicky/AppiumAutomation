<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" total="3" passed="0">
  <reporter-output>
    <line>
      <![CDATA[Test Case Got Failed Screenshot Taken]]>
    </line>
    <line>
      <![CDATA[<a href='D:\ProjectSelenium\Appium_Framework\Screenshots\Android_Pixel_2\2020-12-22-10-00-11\LoginTest\invalidUsernameTest.png'> <img src='D:\ProjectSelenium\Appium_Framework\Screenshots\Android_Pixel_2\2020-12-22-10-00-11\LoginTest\invalidUsernameTest.png' height='400' width='400'/> </a>]]>
    </line>
    <line>
      <![CDATA[Test Case Got Failed Screenshot Taken]]>
    </line>
    <line>
      <![CDATA[<a href='D:\ProjectSelenium\Appium_Framework\Screenshots\Android_Pixel_2\2020-12-22-10-00-11\LoginTest\invalidPasswordTest.png'> <img src='D:\ProjectSelenium\Appium_Framework\Screenshots\Android_Pixel_2\2020-12-22-10-00-11\LoginTest\invalidPasswordTest.png' height='400' width='400'/> </a>]]>
    </line>
    <line>
      <![CDATA[Test Case Got Failed Screenshot Taken]]>
    </line>
    <line>
      <![CDATA[<a href='D:\ProjectSelenium\Appium_Framework\Screenshots\Android_Pixel_2\2020-12-22-10-00-11\LoginTest\validUsernameTest.png'> <img src='D:\ProjectSelenium\Appium_Framework\Screenshots\Android_Pixel_2\2020-12-22-10-00-11\LoginTest\validUsernameTest.png' height='400' width='400'/> </a>]]>
    </line>
  </reporter-output>
  <suite name="Suite" duration-ms="64247" started-at="2020-12-22T04:30:11Z" finished-at="2020-12-22T04:31:15Z">
    <groups>
      <group name="somke">
        <method signature="LoginTest.invalidPasswordTest()[pri:2, instance:com.TestCases.LoginTest@64485a47]" name="invalidPasswordTest" class="com.TestCases.LoginTest"/>
        <method signature="LoginTest.invalidUsernameTest()[pri:1, instance:com.TestCases.LoginTest@64485a47]" name="invalidUsernameTest" class="com.TestCases.LoginTest"/>
        <method signature="LoginTest.validUsernameTest()[pri:3, instance:com.TestCases.LoginTest@64485a47]" name="validUsernameTest" class="com.TestCases.LoginTest"/>
      </group> <!-- somke -->
    </groups>
    <test name="Mobile Automation Test on Pixel 2" duration-ms="64247" started-at="2020-12-22T04:30:11Z" finished-at="2020-12-22T04:31:15Z">
      <class name="com.TestCases.LoginTest">
        <test-method status="PASS" signature="startAppiumServer()[pri:0, instance:com.TestCases.LoginTest@64485a47]" name="startAppiumServer" is-config="true" duration-ms="3064" started-at="2020-12-22T10:00:08Z" finished-at="2020-12-22T10:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startAppiumServer -->
        <test-method status="PASS" signature="DriverInitializataion(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.TestCases.LoginTest@64485a47]" name="DriverInitializataion" is-config="true" duration-ms="20872" started-at="2020-12-22T10:00:11Z" finished-at="2020-12-22T10:00:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[emulator-5554]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Pixel_2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DriverInitializataion -->
        <test-method status="PASS" signature="jsonDataInitialaization()[pri:0, instance:com.TestCases.LoginTest@64485a47]" name="jsonDataInitialaization" is-config="true" duration-ms="5644" started-at="2020-12-22T10:00:32Z" finished-at="2020-12-22T10:00:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jsonDataInitialaization -->
        <test-method status="PASS" signature="startVideoRecording()[pri:0, instance:com.TestCases.LoginTest@64485a47]" name="startVideoRecording" is-config="true" duration-ms="1550" started-at="2020-12-22T10:00:37Z" finished-at="2020-12-22T10:00:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startVideoRecording -->
        <test-method status="PASS" signature="Initialaization()[pri:0, instance:com.TestCases.LoginTest@64485a47]" name="Initialaization" is-config="true" duration-ms="461" started-at="2020-12-22T10:00:39Z" finished-at="2020-12-22T10:00:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Initialaization -->
        <test-method status="FAIL" signature="invalidUsernameTest()[pri:1, instance:com.TestCases.LoginTest@64485a47]" name="invalidUsernameTest" duration-ms="8862" started-at="2020-12-22T10:00:39Z" finished-at="2020-12-22T10:00:48Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
	expected [null] but found [Username and password do not match any user in this service.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
	expected [null] but found [Username and password do not match any user in this service.]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
	at com.TestCases.LoginTest.invalidUsernameTest(LoginTest.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test Case Got Failed Screenshot Taken]]>
            </line>
            <line>
              <![CDATA[<a href='D:\ProjectSelenium\Appium_Framework\Screenshots\Android_Pixel_2\2020-12-22-10-00-11\LoginTest\invalidUsernameTest.png'> <img src='D:\ProjectSelenium\Appium_Framework\Screenshots\Android_Pixel_2\2020-12-22-10-00-11\LoginTest\invalidUsernameTest.png' height='400' width='400'/> </a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidUsernameTest -->
        <test-method status="PASS" signature="stopVideoRecording(org.testng.ITestResult)[pri:0, instance:com.TestCases.LoginTest@64485a47]" name="stopVideoRecording" is-config="true" duration-ms="1030" started-at="2020-12-22T10:00:49Z" finished-at="2020-12-22T10:00:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidUsernameTest status=FAILURE method=LoginTest.invalidUsernameTest()[pri:1, instance:com.TestCases.LoginTest@64485a47] output=Test Case Got Failed Screenshot Taken]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopVideoRecording -->
        <test-method status="PASS" signature="startVideoRecording()[pri:0, instance:com.TestCases.LoginTest@64485a47]" name="startVideoRecording" is-config="true" duration-ms="980" started-at="2020-12-22T10:00:50Z" finished-at="2020-12-22T10:00:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startVideoRecording -->
        <test-method status="PASS" signature="Initialaization()[pri:0, instance:com.TestCases.LoginTest@64485a47]" name="Initialaization" is-config="true" duration-ms="7" started-at="2020-12-22T10:00:51Z" finished-at="2020-12-22T10:00:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Initialaization -->
        <test-method status="FAIL" signature="invalidPasswordTest()[pri:2, instance:com.TestCases.LoginTest@64485a47]" name="invalidPasswordTest" duration-ms="5122" started-at="2020-12-22T10:00:51Z" finished-at="2020-12-22T10:00:56Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
	expected [null] but found [Username and password do not match any user in this service.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
	expected [null] but found [Username and password do not match any user in this service.]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
	at com.TestCases.LoginTest.invalidPasswordTest(LoginTest.java:69)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test Case Got Failed Screenshot Taken]]>
            </line>
            <line>
              <![CDATA[<a href='D:\ProjectSelenium\Appium_Framework\Screenshots\Android_Pixel_2\2020-12-22-10-00-11\LoginTest\invalidPasswordTest.png'> <img src='D:\ProjectSelenium\Appium_Framework\Screenshots\Android_Pixel_2\2020-12-22-10-00-11\LoginTest\invalidPasswordTest.png' height='400' width='400'/> </a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidPasswordTest -->
        <test-method status="PASS" signature="stopVideoRecording(org.testng.ITestResult)[pri:0, instance:com.TestCases.LoginTest@64485a47]" name="stopVideoRecording" is-config="true" duration-ms="1072" started-at="2020-12-22T10:00:57Z" finished-at="2020-12-22T10:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidPasswordTest status=FAILURE method=LoginTest.invalidPasswordTest()[pri:2, instance:com.TestCases.LoginTest@64485a47] output=Test Case Got Failed Screenshot Taken]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopVideoRecording -->
        <test-method status="PASS" signature="startVideoRecording()[pri:0, instance:com.TestCases.LoginTest@64485a47]" name="startVideoRecording" is-config="true" duration-ms="1195" started-at="2020-12-22T10:00:58Z" finished-at="2020-12-22T10:00:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startVideoRecording -->
        <test-method status="PASS" signature="Initialaization()[pri:0, instance:com.TestCases.LoginTest@64485a47]" name="Initialaization" is-config="true" duration-ms="3" started-at="2020-12-22T10:00:59Z" finished-at="2020-12-22T10:00:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Initialaization -->
        <test-method status="FAIL" signature="validUsernameTest()[pri:3, instance:com.TestCases.LoginTest@64485a47]" name="validUsernameTest" duration-ms="8290" started-at="2020-12-22T10:00:59Z" finished-at="2020-12-22T10:01:08Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
	expected [null] but found [PRODUCTS]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
	expected [null] but found [PRODUCTS]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
	at com.TestCases.LoginTest.validUsernameTest(LoginTest.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test Case Got Failed Screenshot Taken]]>
            </line>
            <line>
              <![CDATA[<a href='D:\ProjectSelenium\Appium_Framework\Screenshots\Android_Pixel_2\2020-12-22-10-00-11\LoginTest\validUsernameTest.png'> <img src='D:\ProjectSelenium\Appium_Framework\Screenshots\Android_Pixel_2\2020-12-22-10-00-11\LoginTest\validUsernameTest.png' height='400' width='400'/> </a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- validUsernameTest -->
        <test-method status="PASS" signature="stopVideoRecording(org.testng.ITestResult)[pri:0, instance:com.TestCases.LoginTest@64485a47]" name="stopVideoRecording" is-config="true" duration-ms="2347" started-at="2020-12-22T10:01:10Z" finished-at="2020-12-22T10:01:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validUsernameTest status=FAILURE method=LoginTest.validUsernameTest()[pri:3, instance:com.TestCases.LoginTest@64485a47] output=Test Case Got Failed Screenshot Taken]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopVideoRecording -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.TestCases.LoginTest@64485a47]" name="afterTest" is-config="true" duration-ms="3024" started-at="2020-12-22T10:01:12Z" finished-at="2020-12-22T10:01:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="stopAppiumServer()[pri:0, instance:com.TestCases.LoginTest@64485a47]" name="stopAppiumServer" is-config="true" duration-ms="2" started-at="2020-12-22T10:01:17Z" finished-at="2020-12-22T10:01:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopAppiumServer -->
      </class> <!-- com.TestCases.LoginTest -->
    </test> <!-- Mobile Automation Test on Pixel 2 -->
  </suite> <!-- Suite -->
</testng-results>
